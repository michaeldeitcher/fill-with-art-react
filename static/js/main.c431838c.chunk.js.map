{"version":3,"sources":["context/UserContext.js","utility/ApiClient.js","components/AuthenticationControl.js","components/LogoutButton.js","components/CreateBundleForm.js","components/LoadingSpinners.js","components/Bundles.js","components/Bundle.js","App.js","serviceWorker.js","index.js"],"names":["UserContext","React","createContext","user","login","logout","apiRoot","authorization_token","authentication_token","email","baseURL","headers","Authorization","path","AuthenticationControl","props","state","isSignIn","name","password","nameError","emailError","passwordError","pending","handleChange","bind","handleSubmit","event","newState","this","target","value","setState","preventDefault","handleSignin","handleSignup","fetch","ApiClient","method","body","JSON","stringify","username","then","response","status","handleError","handleSuccess","catch","error","console","log","finally","json","data","errors","length","forEach","source","pointer","detail","attr","attributes","window","localStorage","setItem","className","undefined","onClick","setSignIn","onSubmit","type","onChange","e","Component","LogoutButton","CreateBundleForm","useState","title","setTitle","titleError","imageFile","setImageFile","imageError","setPending","formData","FormData","set","append","config","axios","post","onFormSubmit","files","role","Bundle","bundle","to","style","backgroundImage","image_url","Bundles","bundles","setBundles","loading","setLoading","useEffect","get","listItems","map","key","id","LoadingSpinners","useParams","LoginControl","isLoggedIn","userName","Greeting","UserGreeting","App","auth","getItem","parse","removeItem","Provider","Consumer","context","exact","children","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c431838c.chunk.js","sourcesContent":["import React from 'react'\n\nexport const UserContext = React.createContext({\n  user: {},\n  login: () => {},\n  logout: () => {}\n}); ","const apiRoot = process.env.NODE_ENV === 'development' ?\n    'http://localhost:3001' :\n    'https://ancient-plains-38653.herokuapp.com/'\n\nexport default {\n    apiRoot: apiRoot,\n    config: user => {\n        const authorization_token = `Token token=${user.authentication_token}, email=${user.email}`;\n        return {\n            baseURL: apiRoot,\n            headers: {\n                'Content-Type': 'multipart/form-data',\n                Authorization: authorization_token            \n            }\n        };\n    },\n    imageUrl: path => {\n        return(apiRoot + path);\n    }\n}","import React from 'react'\nimport ApiClient from '../utility/ApiClient'\n\nexport default class AuthenticationControl extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {  isSignIn: true,\n                      name: '', \n                      email: '', \n                      password: '',\n                      nameError: '', \n                      emailError: '', \n                      passwordError: '',\n                      pending: false \n                    };\n  \n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n  \n    handleChange(name, event) {\n      let newState = this.state\n      newState[name] = event.target.value;\n      this.setState(newState);\n    }\n\n    handleSubmit(event) {\n      event.preventDefault();\n      this.setState({pending: true});\n      if(this.state.isSignIn)\n        this.handleSignin();\n      else\n        this.handleSignup();\n    }\n  \n    handleSignup() {\n      fetch(ApiClient.apiRoot + '/users', \n      { \n        method: 'POST',\n        headers: {\"Content-Type\": \"application/json\"},        \n        body: JSON.stringify({\n          user: {\n            username: this.state.name,\n            email: this.state.email,\n            password: this.state.password\n          }\n        })\n      })\n      .then( (response) => {\n        if( response.status === 422 )\n          this.handleError(response);\n        if( response.status === 201 )\n          this.handleSuccess(response);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .finally(()=>{this.setState({pending: false});});      \n    }\n\n    handleSignin() {\n      fetch(ApiClient.apiRoot + '/users/sign_in', \n      { \n        method: 'POST',\n        headers: {\"Content-Type\": \"application/json\"},        \n        body: JSON.stringify({\n          user: {\n            email: this.state.email,\n            password: this.state.password\n          }\n        })\n      })\n      .then( (response) => {\n        if( response.status === 422 )\n          this.handleError(response);\n        if( response.status === 201 )\n          this.handleSuccess(response);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .finally(()=>{this.setState({pending: false});});      \n    }    \n\n    handleError( response ) {\n      response.json().then( data => {\n        let newState = this.state;\n        newState.nameError = '';\n        newState.emailError = '';\n        newState.passwordError = '';\n        if(data.errors.length) {\n          data.errors.forEach( (error) => {\n            if(error.source.pointer === \"/data/attributes/username\")\n              newState.nameError = error.detail;\n            if(error.source.pointer === \"/data/attributes/email\")\n              newState.emailError = error.detail;\n            if(error.source.pointer === \"/data/attributes/password\")\n              newState.passwordError = error.detail;\n          })\n        }\n        this.setState(newState);\n      });\n    }\n\n    handleSuccess( response ) {\n      response.json().then( data => {\n        let attr = data.data.attributes;\n        window.localStorage.setItem('auth', JSON.stringify(attr));    \n        this.props.login();    \n      });\n    }\n\n    setSignIn(isSignIn) {\n      this.setState({isSignIn: isSignIn, nameError: '', emailError: '', passwordError: ''});\n    }\n  \n    render() {\n      return (\n        <div>\n          <div>\n            <div className='session-actions'>\n              <span className={this.state.isSignIn ? 'active' : undefined} onClick={() => this.setSignIn(true)} >Sign In</span>\n              <span className={this.state.isSignIn ? undefined : 'active'} onClick={() => this.setSignIn(false)} >Sign Up</span>\n            </div>          \n          </div>\n\n          <form onSubmit={this.handleSubmit}>\n            <div className='sign-up-container'>\n              <div className={this.state.isSignIn ? 'animate-hide' : 'animate-show'}>\n                <label>Name</label>\n                <input type=\"text\" value={this.state.value} onChange={(e) => this.handleChange('name', e)}/>\n                { this.state.nameError.length > 0  && <div className='error-message'>{ this.state.nameError }</div> }\n              </div>                \n              <label>Email</label>\n              <input type=\"email\" value={this.state.value} onChange={(e) => this.handleChange('email', e)}/>\n              { this.state.emailError.length > 0  && <div className='error-message'>{ this.state.emailError }</div> }              \n              <label>Password</label>\n              <input type=\"password\" value={this.state.value} onChange={(e) => this.handleChange('password', e)}/>\n              { this.state.passwordError.length > 0  && <div className='error-message'>{ this.state.passwordError }</div> }\n              <input type=\"submit\" className=\"submit\" value={this.state.pending ? \"Submitting\" : \"Submit\"} />\n            </div>\n          </form>\n        </div>          \n      );\n    }\n  }","import React from 'react'\n\nexport default class LogoutButton extends React.Component {\n    render(){\n        return (\n            <button onClick={ () => this.props.logout() }>\n                Logout\n            </button>            \n        );\n    }\n}","import React, { useState } from 'react';\nimport ApiClient from '../utility/ApiClient'\nimport axios from 'axios';\n\nexport default function CreateBundleForm(props) {\n  // Declare a new state variable, which we'll call \"count\"\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState('');\n  const [imageFile, setImageFile] = useState('');\n  const [imageError, setImageError] = useState('');\n  const [pending, setPending] = useState(false);\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    console.log(title);\n    console.log(imageFile);\n    setPending(true);\n\n    const authorization_token = `Token token=${props.user.authentication_token}, email=${props.user.email}`;\n\n    const formData = new FormData();\n    formData.set(\"bundle[title]\", title);\n    formData.append(\"bundle[image]\", imageFile);        \n    const config = {\n        headers: {\n            'Content-Type': 'multipart/form-data',\n            Authorization: authorization_token            \n        }\n    }\n    axios.post( ApiClient.apiRoot + '/bundles', formData, config).then( response => {\n        console.log(response);\n    })\n  }\n\n  return (\n    <div>\n        <form onSubmit={(e) => onFormSubmit(e)}>\n            <label>Title</label>\n            <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value) }/>\n            { titleError.length > 0  && <div className='error-message'>{ titleError }</div> }\n            <input type=\"file\" onChange={(e) => setImageFile(e.target.files[0])} />\n            { imageError.length > 0  && <div className='error-message'>{ imageError }</div> }\n            <input type=\"submit\" className=\"submit\" value={pending ? \"Creating\" : \"Create Bundle\"} />\n        </form>\n    </div>\n  );\n}","import React from 'react';\n\nexport default () => { \nreturn (\n    <div className='loading-spinners'>\n        <div className=\"spinner-border text-primary\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n        </div>\n        <div className=\"spinner-border text-secondary\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n        </div>\n        <div className=\"spinner-border text-success\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n        </div>\n        <div className=\"spinner-border text-danger\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n        </div>\n        <div className=\"spinner-border text-warning\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n        </div>\n        <div className=\"spinner-border text-info\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n        </div>\n        <div className=\"spinner-border text-light\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n        </div>\n        <div className=\"spinner-border text-dark\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n        </div>          \n    </div>    \n)};","import React, { useState, useEffect } from 'react';\nimport ApiClient from '../utility/ApiClient'\nimport axios from 'axios';\nimport {Link} from \"react-router-dom\";\nimport LoadingSpinners from './LoadingSpinners';\n\nconst Bundle = (props) => {\n    const bundle = props.bundle;\n    const attr = bundle.attributes;\n\n    return (\n        <Link to={attr.path}>\n            <li className='bundle border border-dark' style={{backgroundImage: `url(${ApiClient.imageUrl(attr.image_url)})`}}>\n                <div className='title rounded'>{attr.title}</div>\n            </li>\n        </Link>\n    )\n}\n\nexport default function Bundles(props) {\n    const [bundles, setBundles] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        if(props.user) {      \n            setLoading(true);\n            axios.get( '/bundles', ApiClient.config(props.user) ).then( response => {\n                setBundles(response.data.data);\n            }).catch( error => {\n                console.log(error);\n            }).then( () => setLoading(false) );\n        }\n    }, [\n        props.user,\n    ]);\n\n    const listItems = bundles.map((bundle) =>\n        <Bundle key={bundle.id} bundle={bundle}/>        \n    );    \n\n    return (\n        <ul className='bundles'>\n            {listItems}\n            { loading && <LoadingSpinners/>}\n        </ul>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport ApiClient from '../utility/ApiClient'\nimport axios from 'axios';\nimport {Link, useParams} from \"react-router-dom\";\nimport LoadingSpinners from './LoadingSpinners';\n\nexport default function Bundles(props) {\n    // We can use the `useParams` hook here to access\n    // the dynamic pieces of the URL.\n    let { id } = useParams();\n  \n    return (\n      <div>\n        <h3>ID: {id}</h3>\n      </div>\n    );\n  }","import React from 'react';\nimport {UserContext} from './context/UserContext';\nimport AuthenticationControl from './components/AuthenticationControl'\nimport LogoutButton from './components/LogoutButton'\nimport CreateBundleForm from './components/CreateBundleForm'\nimport Bundles from './components/Bundles'\nimport Bundle from './components/Bundle'\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nclass LoginControl extends React.Component {\n  componentDidMount() {\n    this.props.login();\n  }  \n\n  render() {\n    const isLoggedIn = this.props.user != null;\n    const userName = this.props.user ? this.props.user.username : '';\n\n    return (\n      <div>\n        <Greeting user={userName} />\n        { isLoggedIn && <LogoutButton logout={() => this.props.logout()} />}\n        { !isLoggedIn && <AuthenticationControl login={() => this.props.login()}/> }\n      </div>\n    );\n  }\n}\n\nfunction UserGreeting(props) {\n  return <span>{props.name}!</span>;\n}\n\nfunction Greeting(props) {\n  if (props.user) {\n    return <UserGreeting name={props.user}/>;\n  }\n  return <div/>;\n}\n\nclass App extends React.Component {\n  state = {};\n\n  login = () => {\n    let newState = this.state;\n    let auth = window.localStorage.getItem('auth');\n    let user = auth ? JSON.parse(auth) : null;\n    newState.user = user;\n    this.setState(newState);\n  }\n\n  logout = () => {\n    window.localStorage.removeItem('auth');\n    let newState = this.state;\n    newState.user = null;\n    this.setState(newState);\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <UserContext.Provider value={{\n          user: this.state.user,\n          login: this.login,\n          logout: this.logout\n        }}>\n          <UserContext.Consumer>\n            {(context) => (\n              <div>\n                <LoginControl user={context.user} login={context.login} logout={context.logout}/>\n                <Router>\n                  <Switch>\n                    <Route exact path='/'>\n                      <Bundles user={context.user}/>                    \n                      <Link to=\"/create-bundle\">\n                        <div className=\"create-bundle\">CREATE A NEW BUNDLE</div>\n                      </Link>\n                    </Route>\n                    <Route exact path=\"/create-bundle\">\n                      <CreateBundleForm user={context.user}/>\n                    </Route>\n                    <Route path=\"/bundle/:id\" children={<Bundle />} />\n                  </Switch>\n                </Router>\n              </div>                \n            )}\n          </UserContext.Consumer>        \n       </UserContext.Provider>\n      </div>       \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconsole.log('fill-with-art: env=' + process.env.NODE_ENV);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}