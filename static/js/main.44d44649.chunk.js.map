{"version":3,"sources":["context/UserContext.js","utility/ApiClient.js","components/AuthenticationControl.js","components/LogoutButton.js","components/ImageCanvas.js","components/CreateBundleForm.js","components/LoadingSpinners.js","components/Bundles.js","components/Bundle.js","App.js","serviceWorker.js","index.js"],"names":["UserContext","React","createContext","user","login","logout","apiRoot","authorization_token","authentication_token","email","baseURL","headers","Authorization","path","AuthenticationControl","props","state","isSignIn","name","password","nameError","emailError","passwordError","pending","handleChange","bind","handleSubmit","event","newState","this","target","value","setState","preventDefault","handleSignin","handleSignup","fetch","ApiClient","method","body","JSON","stringify","username","then","response","status","handleError","handleSuccess","catch","error","console","log","finally","json","data","errors","length","forEach","source","pointer","detail","attr","attributes","window","localStorage","setItem","className","undefined","onClick","setSignIn","onSubmit","type","onChange","e","Component","history","useHistory","push","ImageCanvas","canvasRef","useRef","useState","width","setWidth","height","setHeight","useEffect","canvas","current","ctx","getContext","img","Image","onload","imgRatio","drawHeight","drawImage","drawWidth","toBlob","blob","onImageBlob","src","image","maxWidth","innerWidth","maxHeight","innerHeight","Math","floor","adjustCanvasSize","ref","CreateBundleForm","title","setTitle","titleError","imageFile","setImageFile","imageBlob","setImageBlob","imageError","setPending","previewImgSrc","setPreviewImgSrc","formData","FormData","set","append","config","axios","post","onFormSubmit","file","reader","FileReader","result","readAsDataURL","showImagePreview","files","role","Bundle","bundle","to","friendly_id","style","backgroundImage","image_url","Bundles","bundles","setBundles","loading","setLoading","get","listItems","map","key","id","LoadingSpinners","useParams","setBundle","LoginControl","isLoggedIn","userName","Greeting","LogoutButton","UserGreeting","App","auth","getItem","parse","removeItem","Provider","Consumer","context","basename","exact","children","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.44d44649.chunk.js","sourcesContent":["import React from 'react'\n\nexport const UserContext = React.createContext({\n  user: {},\n  login: () => {},\n  logout: () => {}\n}); ","const apiRoot = process.env.NODE_ENV === 'development' ?\n    'http://localhost:3001' :\n    'https://ancient-plains-38653.herokuapp.com/'\n\nexport default {\n    apiRoot: apiRoot,\n    config: user => {\n        const authorization_token = `Token token=${user.authentication_token}, email=${user.email}`;\n        return {\n            baseURL: apiRoot,\n            headers: {\n                'Content-Type': 'multipart/form-data',\n                Authorization: authorization_token            \n            }\n        };\n    },\n    imageUrl: path => {\n        return(apiRoot + path);\n    }\n}","import React from 'react'\nimport ApiClient from '../utility/ApiClient'\n\nexport default class AuthenticationControl extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {  isSignIn: true,\n                      name: '', \n                      email: '', \n                      password: '',\n                      nameError: '', \n                      emailError: '', \n                      passwordError: '',\n                      pending: false \n                    };\n  \n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n  \n    handleChange(name, event) {\n      let newState = this.state\n      newState[name] = event.target.value;\n      this.setState(newState);\n    }\n\n    handleSubmit(event) {\n      event.preventDefault();\n      this.setState({pending: true});\n      if(this.state.isSignIn)\n        this.handleSignin();\n      else\n        this.handleSignup();\n    }\n  \n    handleSignup() {\n      fetch(ApiClient.apiRoot + '/users', \n      { \n        method: 'POST',\n        headers: {\"Content-Type\": \"application/json\"},        \n        body: JSON.stringify({\n          user: {\n            username: this.state.name,\n            email: this.state.email,\n            password: this.state.password\n          }\n        })\n      })\n      .then( (response) => {\n        if( response.status === 422 )\n          this.handleError(response);\n        if( response.status === 201 )\n          this.handleSuccess(response);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .finally(()=>{this.setState({pending: false});});      \n    }\n\n    handleSignin() {\n      fetch(ApiClient.apiRoot + '/users/sign_in', \n      { \n        method: 'POST',\n        headers: {\"Content-Type\": \"application/json\"},        \n        body: JSON.stringify({\n          user: {\n            email: this.state.email,\n            password: this.state.password\n          }\n        })\n      })\n      .then( (response) => {\n        if( response.status === 422 )\n          this.handleError(response);\n        if( response.status === 201 )\n          this.handleSuccess(response);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .finally(()=>{this.setState({pending: false});});      \n    }    \n\n    handleError( response ) {\n      response.json().then( data => {\n        let newState = this.state;\n        newState.nameError = '';\n        newState.emailError = '';\n        newState.passwordError = '';\n        if(data.errors.length) {\n          data.errors.forEach( (error) => {\n            if(error.source.pointer === \"/data/attributes/username\")\n              newState.nameError = error.detail;\n            if(error.source.pointer === \"/data/attributes/email\")\n              newState.emailError = error.detail;\n            if(error.source.pointer === \"/data/attributes/password\")\n              newState.passwordError = error.detail;\n          })\n        }\n        this.setState(newState);\n      });\n    }\n\n    handleSuccess( response ) {\n      response.json().then( data => {\n        let attr = data.data.attributes;\n        window.localStorage.setItem('auth', JSON.stringify(attr));    \n        this.props.login();    \n      });\n    }\n\n    setSignIn(isSignIn) {\n      this.setState({isSignIn: isSignIn, nameError: '', emailError: '', passwordError: ''});\n    }\n  \n    render() {\n      return (\n        <div>\n          <div>\n            <div className='session-actions'>\n              <span className={this.state.isSignIn ? 'active' : undefined} onClick={() => this.setSignIn(true)} >Sign In</span>\n              <span className={this.state.isSignIn ? undefined : 'active'} onClick={() => this.setSignIn(false)} >Sign Up</span>\n            </div>          \n          </div>\n\n          <form onSubmit={this.handleSubmit}>\n            <div className='sign-up-container'>\n              <div className={this.state.isSignIn ? 'animate-hide' : 'animate-show'}>\n                <label>Name</label>\n                <input type=\"text\" value={this.state.value} onChange={(e) => this.handleChange('name', e)}/>\n                { this.state.nameError.length > 0  && <div className='error-message'>{ this.state.nameError }</div> }\n              </div>                \n              <label>Email</label>\n              <input type=\"email\" value={this.state.value} onChange={(e) => this.handleChange('email', e)}/>\n              { this.state.emailError.length > 0  && <div className='error-message'>{ this.state.emailError }</div> }              \n              <label>Password</label>\n              <input type=\"password\" value={this.state.value} onChange={(e) => this.handleChange('password', e)}/>\n              { this.state.passwordError.length > 0  && <div className='error-message'>{ this.state.passwordError }</div> }\n              <input type=\"submit\" className=\"submit\" value={this.state.pending ? \"Submitting\" : \"Submit\"} />\n            </div>\n          </form>\n        </div>          \n      );\n    }\n  }","import React from 'react'\nimport {useHistory} from \"react-router-dom\";\n\nexport default (props) => {\n    let history = useHistory();\n\n    return (\n        <button onClick={ () => {props.logout(); history.push('/');}}>\n            Logout\n        </button>            \n    );\n}","import React, { useState, useEffect, useRef } from 'react';\n\nexport default function ImageCanvas(props) {\n    const canvasRef = useRef();\n    const imgRef = useRef();\n\n    const [width, setWidth] = useState(850);\n    const [height, setHeight] = useState(1100);\n\n    const adjustCanvasSize = () => {\n        const ratio = 85/110;\n        const margin = 100;\n        const maxWidth = window.innerWidth - margin;\n        const maxHeight = window.innerHeight - margin;\n        if( maxWidth < maxHeight ) {\n            setWidth(maxWidth);\n            setHeight(Math.floor(maxWidth/ratio));\n        } else  {\n            setHeight(maxHeight);\n            setWidth(Math.floor(maxHeight*ratio));\n        }\n    }\n\n    useEffect( () => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext(\"2d\");\n        let img = new Image();        \n        img.onload = () => {\n            // draw image center filling canvas at the same aspect ratio as image\n            console.log(img.height + ' ' + img.width);\n            const imgRatio = img.width / img.height;\n            if(img.height > img.width){\n                let drawHeight = width / imgRatio;\n                ctx.drawImage(img, 0, -(drawHeight - height)/2, width, drawHeight); \n            } else {\n                let drawWidth = height * imgRatio;\n                ctx.drawImage(img, -(drawWidth - width)/2, 0, drawWidth, height);                 \n            }\n            canvas.toBlob( blob => props.onImageBlob(blob));\n        }\n        img.src = props.image;\n        adjustCanvasSize();    \n    }, [props.image]);\n\n    return (\n      <div>\n        <canvas ref={canvasRef} width={width} height={height} />\n      </div>\n    )\n}","import React, { useState } from 'react';\nimport ImageCanvas from './ImageCanvas'\nimport ApiClient from '../utility/ApiClient'\nimport axios from 'axios';\n\nexport default function CreateBundleForm(props) {\n  // Declare a new state variable, which we'll call \"count\"\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState('');\n  const [imageFile, setImageFile] = useState('');\n  const [imageBlob, setImageBlob] = useState('');\n  const [imageError, setImageError] = useState('');\n  const [pending, setPending] = useState(false);\n  const [previewImgSrc, setPreviewImgSrc] = useState('');\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    console.log(title);\n    console.log(imageFile);\n    setPending(true);\n\n    const authorization_token = `Token token=${props.user.authentication_token}, email=${props.user.email}`;\n\n    const formData = new FormData();\n    formData.set(\"bundle[title]\", title);\n    formData.append('bundle[image]', imageBlob, 'filename.png');      \n    const config = {\n        headers: {\n            'Content-Type': 'multipart/form-data',\n            Authorization: authorization_token            \n        }\n    }\n    axios.post( ApiClient.apiRoot + '/bundles', formData, config).then( response => {\n        console.log(response);\n    })\n  }\n\n  const showImagePreview = (file) => {\n      if(!file)\n        return;\n\n      let reader = new FileReader()\n      reader.onload = (e) => {\n        setPreviewImgSrc(e.target.result);\n        setImageFile(file);\n      }\n      reader.file = file\n      reader.readAsDataURL(file)\n  }\n\n  const onImageBlob = data => {\n    setImageBlob(data);\n  }\n\n  return (\n    <div className='bundle bundle-create'>\n        <ImageCanvas image={previewImgSrc} onImageBlob={onImageBlob}/>\n        <form onSubmit={(e) => onFormSubmit(e)}>\n            <label>Title</label>\n            <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value) }/>\n            { titleError.length > 0  && <div className='error-message'>{ titleError }</div> }\n            <input type=\"file\" onChange={(e) => showImagePreview(e.target.files[0])} />\n            { imageError.length > 0  && <div className='error-message'>{ imageError }</div> }\n            <input type=\"submit\" className=\"submit\" value={pending ? \"Creating\" : \"Create Bundle\"} />\n        </form>\n    </div>\n  );\n}","import React from 'react';\n\nexport default () => { \nreturn (\n    <div className='loading-spinners'>\n        <div className=\"spinner-border text-primary\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n        </div>\n        <div className=\"spinner-border text-secondary\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n        </div>\n        <div className=\"spinner-border text-success\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n        </div>\n        <div className=\"spinner-border text-danger\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n        </div>\n        <div className=\"spinner-border text-warning\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n        </div>\n        <div className=\"spinner-border text-info\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n        </div>\n        <div className=\"spinner-border text-light\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n        </div>\n        <div className=\"spinner-border text-dark\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n        </div>          \n    </div>    \n)};","import React, { useState, useEffect } from 'react';\nimport ApiClient from '../utility/ApiClient'\nimport axios from 'axios';\nimport {Link} from \"react-router-dom\";\nimport LoadingSpinners from './LoadingSpinners';\n\nconst Bundle = (props) => {\n    const bundle = props.bundle;\n    const attr = bundle.attributes;\n\n    return (\n        <Link to={'/bundle/'+ attr.friendly_id}>\n            <li className='bundle border border-dark' style={{backgroundImage: `url(${ApiClient.imageUrl(attr.image_url)})`}}>\n                <div className='title rounded'>{attr.title}</div>\n            </li>\n        </Link>\n    )\n}\n\nexport default function Bundles(props) {\n    const [bundles, setBundles] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        if(props.user) {      \n            setLoading(true);\n            axios.get( '/bundles', ApiClient.config(props.user) ).then( response => {\n                setBundles(response.data.data);\n            }).catch( error => {\n                console.log(error);\n            }).then( () => setLoading(false) );\n        } else {\n            setBundles([]);\n        }\n    }, [\n        props.user,\n    ]);\n\n    const listItems = bundles.map((bundle) =>\n        <Bundle key={bundle.id} bundle={bundle}/>        \n    );    \n\n    return (\n        <ul className='bundles'>\n            {listItems}\n            { loading && <LoadingSpinners/>}\n        </ul>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport ApiClient from '../utility/ApiClient'\nimport axios from 'axios';\nimport {Link, useParams} from \"react-router-dom\";\nimport LoadingSpinners from './LoadingSpinners';\n\nexport default function Bundle(props) {\n    let { id } = useParams();\n    const [bundle, setBundle] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => { \n        if(!props.user)\n            return;\n        \n        setLoading(true);\n        axios.get( `/bundles/${id}`, ApiClient.config(props.user) ).then( response => {\n            setBundle(response.data.data);\n        }).catch( error => {\n            console.log(error);\n        }).then( () => setLoading(false) );\n    }, [id, props.user]);\n  \n    return (\n      <div>\n        { bundle &&\n            <div>\n                <h2>{bundle.attributes.title}</h2>\n                <img src={ApiClient.imageUrl(bundle.attributes.image_url)}/>\n            </div>\n        }\n        { loading && <LoadingSpinners/>}\n      </div>\n    );\n  }","import React from 'react';\nimport {UserContext} from './context/UserContext';\nimport AuthenticationControl from './components/AuthenticationControl'\nimport LogoutButton from './components/LogoutButton'\nimport CreateBundleForm from './components/CreateBundleForm'\nimport Bundles from './components/Bundles'\nimport Bundle from './components/Bundle'\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nclass LoginControl extends React.Component {\n  componentDidMount() {\n    this.props.login();\n  }  \n\n  render() {\n    const isLoggedIn = this.props.user != null;\n    const userName = this.props.user ? this.props.user.username : '';\n\n    return (\n      <div>\n        <Greeting user={userName} />\n        { isLoggedIn && <LogoutButton logout={() => this.props.logout()} />}\n        { !isLoggedIn && <AuthenticationControl login={() => this.props.login()}/> }\n      </div>\n    );\n  }\n}\n\nfunction UserGreeting(props) {\n  return <span>{props.name}!</span>;\n}\n\nfunction Greeting(props) {\n  if (props.user) {\n    return <UserGreeting name={props.user}/>;\n  }\n  return <div/>;\n}\n\nclass App extends React.Component {\n  state = {};\n\n  login = () => {\n    let newState = this.state;\n    let auth = window.localStorage.getItem('auth');\n    let user = auth ? JSON.parse(auth) : null;\n    newState.user = user;\n    this.setState(newState);\n  }\n\n  logout = () => {\n    window.localStorage.removeItem('auth');\n    let newState = this.state;\n    newState.user = null;\n    this.setState(newState);\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <UserContext.Provider value={{\n          user: this.state.user,\n          login: this.login,\n          logout: this.logout\n        }}>\n          <UserContext.Consumer>\n            {(context) => (\n              <div>\n                <Router basename='/fill-with-art-react'>\n                  <LoginControl user={context.user} login={context.login} logout={context.logout}/>                \n                  <Switch>\n                    <Route exact path='/'>\n                      <Bundles user={context.user}/>                    \n                      <Link to=\"/create-bundle\">\n                        <div className=\"create-bundle\">CREATE A NEW BUNDLE</div>\n                      </Link>\n                    </Route>\n                    <Route exact path=\"/create-bundle\">\n                      <CreateBundleForm user={context.user}/>\n                    </Route>\n                    <Route path=\"/bundle/:id\" children={<Bundle user={context.user}/>} />\n                  </Switch>\n                </Router>\n              </div>                \n            )}\n          </UserContext.Consumer>        \n       </UserContext.Provider>\n      </div>       \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconsole.log('fill-with-art: env=' + process.env.NODE_ENV);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}